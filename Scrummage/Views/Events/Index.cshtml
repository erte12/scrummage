@model Scrummage.Presentation.ViewModels.EventViewModel

@{
    ViewBag.Title = "Events";
}

<!-- New event modal -->
<div class="modal fade" id="newEventModal" tabindex="-1" role="dialog" aria-labelledby="newEventModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Create new event</h4>
            </div>
            <form id="newEventForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="eventContent">Content</label>
                        <textarea id="eventContent" required type="text" name="content" class="form-control max-width"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="startsAt" class="control-label">Starts at:</label>
                                <div class="input-group" date id="startsAt">
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                    <input required name="startsAt" type="text" class="form-control"/>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="endsAt" class="control-label">Ends at:</label>
                                <div class="input-group" date id="endsAt">
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                    <input required name="endsAt" type="text" class="form-control"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input id="teamId" name="teamId" type="hidden" value="@Model.Team.Id"/>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<h2>Events</h2>
<hr />

<div class="row">
    <div class="col-lg-2">
        @Html.ActionLink("Scrum Board", "RedirectToNewestSprintForTeam", "Sprints", 
            new { teamId = Model.Team.Id }, 
            new { @class = "btn btn-primary btn-block" })
    </div>
    <div class="col-md-2">
        <button data-toggle="modal" data-target="#newEventModal" type="button" class="btn btn-success btn-block">New event</button>
    </div>   
</div>
<hr />
<table id="events" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Event</th>
        <th>Starts at</th>
        <th>Ends at</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/handlebars")
    
    @* Event Row template *@
    <script id="eventRow" type="text/x-handlebars-template">
        @Html.Partial("_EventRow")
    </script>
    
    <script>
        var source = $('#eventRow').html();
        var template = Handlebars.compile(source);
        var table = $('#events');

        $.get('/Api/Events?teamId=' + @Model.Team.Id, function (data) {
            data.forEach(function (event) {
                var eventRowHtml = template(event);
                $('#events tbody').append(eventRowHtml);
            });
        }).done(function() {
            table = table.DataTable({
                "order": [2, 'desc']
            });
        });

        $('#newEventForm').validate({
            submitHandler: function () {
                $.ajax({
                    url: '/Api/Events',
                    method: 'post',
                    data: $('#newEventForm').serialize()
                })
                .done(function(newEvent) {
                    var newEventRowHtml = template(newEvent);
                    table.row.add($(newEventRowHtml)).draw();
                    $('#newEventForm').find("input[type=text], textarea").val("");
                    $('#newEventModal').modal('toggle');
                    toastr.success('New event has been created!');
                })
                .fail(function() {
                    toastr.error('Something went wrong!');
                });
                return false;
            }
        });

        $('#startsAt').datetimepicker();
        $('#endsAt').datetimepicker();

        $('#startsAt').datetimepicker();
        $('#endsAt').datetimepicker({
            useCurrent: false //Important! See issue #1075
        });
        $("#startsAt").on("dp.change", function (e) {
            $('#endsAt').data("DateTimePicker").minDate(e.date);
        });
        $("#endsAt").on("dp.change", function (e) {
            $('#startsAt').data("DateTimePicker").maxDate(e.date);
        });

        $('#events tbody').on('click', '.js-delete', function () {

            var eventRow = $(this).parents('tr');

            var eventId = eventRow.attr('data-event-id');

            bootbox.confirm({
                title: "Delete event?",
                message: "Do you want to delete this event? This cannot be undone.",
                buttons: {
                    cancel: {
                        label: '<i class="fa fa-times"></i> Cancel'
                    },
                    confirm: {
                        label: '<i class="fa fa-check"></i> Confirm'
                    }
                },
                callback: function (result) {
                    if (result === true) {
                        $.ajax({
                            url: '/Api/Events/' + eventId,
                            method: 'delete'
                        })
                        .done(function() {
                            toastr.success('Event successfully deleted');
                            table.rows(eventRow).remove().draw();
                        })
                        .fail(function() {
                            toastr.error('Something went wrong');
                        });
                    }
                }
            });
        });
    </script>
}
