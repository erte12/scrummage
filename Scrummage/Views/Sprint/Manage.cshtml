@using Scrummage.Models
@using Scrummage.ViewModels
@model Scrummage.ViewModels.ManageSprintViewModel

@{
    ViewBag.Title = "title";
}

<h2>Manage Sprint</h2>

<div class="row">
    <div class="col-md-6">
        <h3>Add new task to backlog</h3>
        <form id="newTask">
            <div class="form-group">
                <label class="control-label">Content</label>
                <textarea rows="6" name="content" required value="" class="form-control"></textarea>
            </div>
            <input name="sprintId" type="hidden" value="@Model.Id"/>
            <button class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div class="col-md-6">
        <h3>Sprint Information</h3>
        <form id="sprintForm">
            <div class="form-group">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new {@class="form-control"})
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>
</div>


<hr/>
<h2>Backlog</h2>
<table id="tasks" class="table table-bordered table-hover">
    <thead>
        <th>Task content</th>
        <th>Who</th>
        <th>Estimation</th>
    </thead>
    <tbody>
    
    @if (Model.Tasks.Any())
    {
        //TODO: API Implementation
        foreach (var task in Model.Tasks)
        {
            @Html.Partial("_TaskRow", new ManageSprintTaskRowViewModel
            {
                Task = task,
                Users = Model.Users,
                Estimations = Model.Estimations
            })
        }
    }
    else
    {
        @Html.Partial("_TaskRow", new ManageSprintTaskRowViewModel
        {
            Task = new ScrumTask{Id = 0, Content = null, UserId = null},
            Users = Model.Users,
            Estimations = Model.Estimations
        })
    }
    </tbody>
</table>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

    $('#tasks').dataTable();

    //validaiton doesn't work properly'
    $('#sprintForm').validate({
        submitHandler: function () {

            $.ajax({
                url: '/api/sprint/@Model.Id',
                method: 'patch',
                data: $('#sprintForm').serialize()
            })
            .done(function() {
                toastr.success('Changes has been saved!');

            })
            .fail(function() {
                toastr.error('Something went wrong!');
            });

            return false;
        }
    });

    $('#newTask').validate({
        submitHandler: function () {

            $.ajax({
                    url: '/api/scrumtasks/',
                    method: 'post',
                    data: $('#newTask').serialize()
                })
                .done(function(data) {
                    toastr.success('New task has been created!');
                    $('.js-task-row').first().clone().appendTo($('#tasks tbody'));
                    var newElement = $('.js-task-row').last().show();

                    newElement.attr('data-task-id', data.id);
                    newElement.find('.js-task-content').last().text(data.content);
                })
                .fail(function() {
                    toastr.error('Something went wrong!');
                });

            return false;
        }
    });

    $('.js-members').on('change',
        function() {
            var userId = $(this).val();
            var scrumTaskId = $(this).parents('tr').attr('data-task-id');

            $.ajax({
                url: '/api/scrumtasks/' + scrumTaskId,
                method: 'patch',
                data: { userId: userId }
            })
            .done(function() {
                toastr.success('User set successfully!');
            })
            .fail(function() {
                toastr.error('Something went wrong!');
            });
        });

    $('.js-estimations').on('change',
        function() {
            var estimationId = $(this).val();
            console.log(estimationId);
            var scrumTaskId = $(this).parents('tr').attr('data-task-id');

            $.ajax({
                    url: '/api/scrumtasks/' + scrumTaskId,
                    method: 'patch',
                    data: { estimationId: estimationId }
                })
                .done(function() {
                    toastr.success('User set successfully!');
                })
                .fail(function() {
                    toastr.error('Something went wrong!');
                });
        });
    </script>
}
