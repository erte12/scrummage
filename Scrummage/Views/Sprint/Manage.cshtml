@using Scrummage.Models
@using Scrummage.ViewModels
@model ManageSprintViewModel

@{
    ViewBag.Title = "Manage Sprint";
}

<h2>Manage Sprint</h2>
<hr/>
@Html.ActionLink("Go to Scrum Board", "Index", new {Model.Id}, new {@class="btn btn-primary"})
<hr/>

<div class="row">
    <div class="col-md-6">
        <h3>Add new task to backlog</h3>
        <form id="newTask">
            <div class="form-group">
                <label class="control-label">Content</label>
                <textarea rows="6" name="content" required value="" class="form-control"></textarea>
            </div>
            <input name="sprintId" type="hidden" value="@Model.Id"/>
            <button class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div class="col-md-6">
        <h3>Sprint Information</h3>
        <form id="sprintForm">
            <div class="form-group">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new {@class="form-control"})
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>
</div>

<hr/>
<h2>Backlog</h2>
<table id="tasks" class="table table-bordered table-hover vertical-align">
    <thead>
        <th>Task content</th>
        <th>Who</th>
        <th>Estimation</th>
        <th>Priority</th>
        <th>Delete</th>
        <th hidden>Created at</th>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/handlebars")

    @* Task Row template *@
    <script id="taskRow" type="text/x-handlebars-template">
        @Html.Partial("_TaskRowRenderTest", new ManageSprintTaskRowViewModel
        {
            Users = Model.Users,
            Estimations = Model.Estimations
        })
    </script>
    
    @* Render table content *@
    <script>
        var source = $('#taskRow').html();
        var template = Handlebars.compile(source);
        var table = $('#tasks');

        $.get('/api/ScrumTasks?sprintId=' + @Model.Id, function (data) {
            data.forEach(function (task) {
                var taskRowHtml = template(task);
                $('#tasks tbody').append(taskRowHtml);
            });
        }).done(function() {
            table = table.DataTable({
                "order": [5, 'desc']
            });
        });

        //validaiton doesn't work properly'
        $('#sprintForm').validate({
            submitHandler: function () {

                $.ajax({
                        url: '/api/sprint/@Model.Id',
                        method: 'patch',
                        data: $('#sprintForm').serialize()
                    })
                    .done(function() {
                        toastr.success('Changes has been saved!');
                    })
                    .fail(function() {
                        toastr.error('Something went wrong!');
                    });

                return false;
            }
        });

        $("#sprintForm").enter();

        $('#newTask').validate({
            submitHandler: function () {

                $.ajax({
                        url: '/api/scrumtasks/',
                        method: 'post',
                        data: $('#newTask').serialize()
                    })
                    .done(function(data) {
                        toastr.success('New task has been created!');
                        var taskRowHtml = template(data);
                        $('#newTask').find('textarea').val('').focus();
                        table.row.add($(taskRowHtml)).draw();
                    })
                    .fail(function() {
                        toastr.error('Something went wrong!');
                    });

                return false;
            }
        });

        $("#newTask").enter();

        $('#tasks tbody').on('change', '.js-members', function () {
            var userId = $(this).val();
            var scrumTaskId = $(this).parents('tr').attr('data-task-id');

            $.ajax({
                url: '/api/scrumtasks/' + scrumTaskId,
                method: 'patch',
                data: { userId: userId }
            })
            .done(function() {
                toastr.success('User set successfully!');
            })
            .fail(function() {
                toastr.error('Something went wrong!');
            });
        });

        $('#tasks tbody').on('change', '.js-estimations', function() {
            var estimationId = $(this).val();
            var scrumTaskId = $(this).parents('tr').attr('data-task-id');

            $.ajax({
                    url: '/api/scrumtasks/' + scrumTaskId,
                    method: 'patch',
                    data: { estimationId: estimationId }
                })
                .done(function() {
                    toastr.success('Estimation set successfully!');
                })
                .fail(function() {
                    toastr.error('Something went wrong!');
                });
            });

        $('#tasks tbody').on('change', '.js-priority', function() {
            var priority = $(this).val();
            var scrumTaskId = $(this).parents('tr').attr('data-task-id');

            $.ajax({
                url: '/api/scrumtasks/' + scrumTaskId,
                method: 'patch',
                data: { priority: priority }
            })
            .done(function() {
                toastr.success('Priority changed successfully');
            })
            .fail(function() {
                toastr.error('Something went wrong!');
            });
        });

        $('#tasks tbody').on('click', '.js-delete', function () {

            var taskRow = $(this).parents('tr');

            var taskId = taskRow.attr('data-task-id');

            bootbox.confirm({
                title: "Delete task?",
                message: "Do you want to delete this task? This cannot be undone.",
                buttons: {
                    cancel: {
                        label: '<i class="fa fa-times"></i> Cancel'
                    },
                    confirm: {
                        label: '<i class="fa fa-check"></i> Confirm'
                    }
                },
                callback: function (result) {
                    if (result === true) {
                        $.ajax({
                            url: '/api/scrumtasks/' + taskId,
                            method: 'delete'
                        })
                        .done(function() {
                            toastr.success('Task successfully deleted');
                            table.rows(taskRow).remove().draw();
                        })
                        .fail(function() {
                            toastr.error('Something went wrong!');
                        });
                    }
                }
            });
        });
    </script>
}
