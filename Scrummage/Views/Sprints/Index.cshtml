@using Microsoft.AspNet.Identity
@using Scrummage.Core
@using Scrummage.Models
@model Scrummage.ViewModels.SprintBoardViewModel

@{
    ViewBag.Title = "Scrum Board";
    var sprintNotStartedYet = Model.StartsAt > DateTime.Now;
    var sprintIsFinished = Model.EndsAt < DateTime.Now;
    var sprintIsInactive = sprintNotStartedYet || sprintIsFinished;
}

<h2>Scrum board - @Model.Name (@Model.StartsAt.ToString("d") - @Model.EndsAt.ToString("d")) - Team: @Model.Team.Name</h2>
<hr/>
<div class="row">
    <div class="container pull-left">
        <div class="col-lg-3">
            <select id="sprintsList" class="form-control center-block">
                @foreach (var sprint in @Model.TeamSprints)
                {
                    <option @((sprint.Id == Model.Id)
                                  ? "selected"
                                  : null) value="@sprint.Id">@sprint.Name</option>
                }
            </select>
        </div>
        
        @if (User.IsInRole(RoleName.ScrumMaster))
        {
            <div class="col-lg-2">
                @Html.ActionLink("Manage sprint", "Manage", "Sprints",
                    new {id = Model.Id},
                    new {@class = "btn btn-primary btn-block"})
            </div>
        }
        <div class="col-lg-2">
            @Html.ActionLink("Statistics", "Statistics", "Sprints",
                new { id = Model.Id },
                new {@class = "btn btn-primary btn-block"})
        </div>
        @if (User.IsInRole(RoleName.ScrumMaster))
        {
            <div class="col-lg-2">
                @Html.ActionLink("New sprint", "New", "Sprints",
                    new {teamId = Model.Team.Id},
                    new {@class = "btn btn-success btn-block" })
            </div>
        }
        <div class="col-lg-2">
            @Html.ActionLink("Events", "Index", "Events",
                new {teamId = Model.Team.Id},
                new {@class = "btn btn-warning btn-block" })
        </div>
    </div>
</div>
<hr/>

@if (sprintIsInactive)
{
    <div class="row">
        <div class="col-md-offset-3 col-md-6">
            <div class="text-center alert@(sprintNotStartedYet ? " alert-info" : " alert-success")" role="alert">
                <span class="glyphicon glyphicon-alert"></span>
                @if (sprintNotStartedYet)
                {
                    <text>This sprint starts at @Model.StartsAt.ToString("d") and is not active yet.</text>
                }
                else
                {
                    <text>This sprint was completed at @Model.EndsAt.ToString("d") and is no longer active.</text>
}
            </div> 
        </div>
    </div>
}

<table id="scrumBoard" class="table table-bordered@(sprintIsInactive ? " disabled" : null)">
    <thead>
    <tr>
        <th>Who</th>
        <th>Tasks</th>
        <th>Ongoing</th>
        <th>Done</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Users)
    {
        <tr class="js-user-row" data-user-id="@user.Id">
            <td class="scrum-who-col">
                @if (user.Id.Equals(User.Identity.GetUserId()))
                {
                    <strong>@user.Name @user.Surname</strong>
                }
                else
                {
                    <text>@user.Name @user.Surname</text>
                }
            </td>
            <td data-type-id="@((byte)TaskType.Awaiting)" class="scrum-task-col">

            </td>
            <td data-type-id="@((byte)TaskType.Ongoing)" class="scrum-task-col">

            </td>
            <td data-type-id="@((byte)TaskType.Done)" class="scrum-task-col">

            </td>
        </tr>
    }
    </tbody>
</table> 


@section scripts
{
    @* Task Box template *@
    <script id="taskBox" type="text/x-handlebars-template">
        @Html.Partial("_TaskBox")    
    </script>
    
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/handlebars")
    @Scripts.Render("~/bundles/views/sprints/index")

    <script>
        var tookOptions = [
            @foreach (var estimation in Model.Estimations)
            {
                @:{
                @:    text: @estimation.Value,
                @:    value: @estimation.Id
                @:},
            }
        ];

        loadScrumTasksTableData(@Model.Id, @sprintIsInactive.ToString().ToLower(), '@User.Identity.GetUserId()');
        bindSprintSelectboxEvent();
        bindUpdateScrumTaskEvent(tookOptions);
    </script>
}